// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Modelo de Usuário\nmodel User {\n  id             String           @id @default(uuid())\n  email          String           @unique\n  name           String\n  password       String\n  role           String           // BUYER, SELLER, GLOBAL, PLATINUM, ADMIN\n  plan           String           // BUYER, SELLER, GLOBAL_GOLD, GLOBAL_PLATINUM\n  reputationLevel String          // BRONZE, SILVER, GOLD, PLATINUM, DIAMOND\n  miles          Miles[]\n  boughtTransactions Transaction[] @relation(\"buyer\")\n  soldTransactions   Transaction[] @relation(\"seller\")\n  createdAt      DateTime         @default(now())\n  updatedAt      DateTime         @updatedAt\n}\n\n// Modelo de Milhas\nmodel Miles {\n  id               String       @id @default(uuid())\n  user             User         @relation(fields: [userId], references: [id])\n  userId           String\n  program          String\n  amount           Int\n  expirationDate   DateTime\n  pricePerThousand Float\n  status           String       // AVAILABLE, IN_AUCTION, SOLD\n  auction          Auction?\n  transaction      Transaction?\n  createdAt        DateTime     @default(now())\n  updatedAt        DateTime     @updatedAt\n}\n\n// Modelo de Leilão\nmodel Auction {\n  id              String   @id @default(uuid())\n  miles           Miles    @relation(fields: [milesId], references: [id])\n  milesId         String   @unique\n  startingPrice   Float\n  currentPrice    Float\n  minBidIncrement Float\n  startDate       DateTime\n  endDate         DateTime\n  status          String   // ACTIVE, FINISHED, CANCELLED\n  winnerId        String?\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n}\n\n// Modelo de Transação\nmodel Transaction {\n  id         String   @id @default(uuid())\n  buyer      User     @relation(\"buyer\", fields: [buyerId], references: [id])\n  buyerId    String\n  seller     User     @relation(\"seller\", fields: [sellerId], references: [id])\n  sellerId   String\n  miles      Miles    @relation(fields: [milesId], references: [id])\n  milesId    String   @unique\n  amount     Int\n  totalPrice Float\n  status     String   // PENDING, COMPLETED, CANCELLED\n  type       String   // DIRECT, AUCTION\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n}